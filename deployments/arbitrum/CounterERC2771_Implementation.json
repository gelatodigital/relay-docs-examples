{
  "address": "0xF99c73455a92Bd88FD18726De1869060943D0a7f",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trustedForwarder",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_msgSender",
          "type": "address"
        }
      ],
      "name": "IncrementContextCounter",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "contextCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "incrementContext",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xe7a32170e2cf54ee336dd355e9a56f57ad1a4130c6c8d71236a72498427ffff7",
  "receipt": {
    "to": null,
    "from": "0xa0B2F93e4ef04de51a91bcBc494c04E55F8ff6EB",
    "contractAddress": "0xF99c73455a92Bd88FD18726De1869060943D0a7f",
    "transactionIndex": 1,
    "gasUsed": "383432",
    "logsBloom": "0x
    "blockHash": "0xade037d6372ebad51a66f1d3c94496f11fb606fdc9d32de95bbf485bdf3caa66",
    "transactionHash": "0xe7a32170e2cf54ee336dd355e9a56f57ad1a4130c6c8d71236a72498427ffff7",
    "logs": [],
    "blockNumber": 25669279,
    "cumulativeGasUsed": "383432",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xaBcC9b596420A9E9172FD5938620E265a0f9Df92"
  ],
  "numDeployments": 1,
  "solcInputHash": "1d0e92572021b342bbc064c96baad83e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trustedForwarder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_msgSender\",\"type\":\"address\"}],\"name\":\"IncrementContextCounter\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contextCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incrementContext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CounterERC2771.sol\":\"CounterERC2771\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/metatx/ERC2771Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (metatx/ERC2771Context.sol)\\n\\npragma solidity ^0.8.9;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Context variant with ERC2771 support.\\n */\\nabstract contract ERC2771Context is Context {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable _trustedForwarder;\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor(address trustedForwarder) {\\n        _trustedForwarder = trustedForwarder;\\n    }\\n\\n    function isTrustedForwarder(address forwarder) public view virtual returns (bool) {\\n        return forwarder == _trustedForwarder;\\n    }\\n\\n    function _msgSender() internal view virtual override returns (address sender) {\\n        if (isTrustedForwarder(msg.sender)) {\\n            // The assembly code is more direct than the Solidity version using `abi.decode`.\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                sender := shr(96, calldataload(sub(calldatasize(), 20)))\\n            }\\n        } else {\\n            return super._msgSender();\\n        }\\n    }\\n\\n    function _msgData() internal view virtual override returns (bytes calldata) {\\n        if (isTrustedForwarder(msg.sender)) {\\n            return msg.data[:msg.data.length - 20];\\n        } else {\\n            return super._msgData();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xb6a3e264c7fc4ec11d244561232b0f49dbccc75ce3d14e5f0181cf134fa6db29\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/CounterERC2771.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.16;\\n\\nimport {\\n    ERC2771Context\\n} from \\\"@openzeppelin/contracts/metatx/ERC2771Context.sol\\\";\\n\\n// Inheriting ERC2771Context gives access to:\\n// 1. isTrustedForwarder(), returns true if the address is the trustedForwarder\\n// 2. _msgSender() - function to retrieve original off-chain sender by\\n// taking last 20 bytes of calldata.\\ncontract CounterERC2771 is ERC2771Context {\\n    // A mapping of a counter to each _msgSender()\\n    mapping(address => uint256) public contextCounter;\\n\\n    event IncrementContextCounter(address _msgSender);\\n\\n    // a modifier which utilises `isTrustedForwarder` for security.\\n    modifier onlyTrustedForwarder() {\\n        require(\\n            isTrustedForwarder(msg.sender),\\n            \\\"Only callable by Trusted Forwarder\\\"\\n        );\\n        _;\\n    }\\n\\n    // Setting the trustedForwarder upon contract deployment\\n    //solhint-disable-next-line no-empty-blocks\\n    constructor(address trustedForwarder) ERC2771Context(trustedForwarder) {}\\n\\n    // `incrementContext` is the target function to call\\n    // this function increments the counter mapped to the _msgSender\\n    function incrementContext() external onlyTrustedForwarder {\\n        address _msgSender = _msgSender();\\n\\n        contextCounter[_msgSender]++;\\n\\n        // Emitting an event for testing purposes\\n        emit IncrementContextCounter(_msgSender);\\n    }\\n}\\n\",\"keccak256\":\"0x25cd1b955386a2971daa0f37562a704f4dd4bb781a387287eef02cd25d6bc233\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405161041038038061041083398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516103796100976000396000818160560152818160e2015261023c01526103796000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063572b6c051461004657806382b76168146100a8578063f69c0ac1146100d6575b600080fd5b6100936100543660046102a7565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff90811691161490565b60405190151581526020015b60405180910390f35b6100c86100b63660046102a7565b60006020819052908152604090205481565b60405190815260200161009f565b6100de6100e0565b005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1633146101a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4f6e6c792063616c6c61626c65206279205472757374656420466f727761726460448201527f6572000000000000000000000000000000000000000000000000000000000000606482015260840160405180910390fd5b60006101b3610238565b73ffffffffffffffffffffffffffffffffffffffff811660009081526020819052604081208054929350906101e7836102e4565b909155505060405173ffffffffffffffffffffffffffffffffffffffff821681527fea2bfe80062c6394f8f8d5804cafdf4b2ff1c2b5feefccbb11233dc843632d0a9060200160405180910390a150565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1633036102a257507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec36013560601c90565b503390565b6000602082840312156102b957600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146102dd57600080fd5b9392505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361033c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220d1a11ad15c84e61c924b1c122a8896f9e758ffcd5215de911814e347d77eb9e064736f6c63430008100033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063572b6c051461004657806382b76168146100a8578063f69c0ac1146100d6575b600080fd5b6100936100543660046102a7565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff90811691161490565b60405190151581526020015b60405180910390f35b6100c86100b63660046102a7565b60006020819052908152604090205481565b60405190815260200161009f565b6100de6100e0565b005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1633146101a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4f6e6c792063616c6c61626c65206279205472757374656420466f727761726460448201527f6572000000000000000000000000000000000000000000000000000000000000606482015260840160405180910390fd5b60006101b3610238565b73ffffffffffffffffffffffffffffffffffffffff811660009081526020819052604081208054929350906101e7836102e4565b909155505060405173ffffffffffffffffffffffffffffffffffffffff821681527fea2bfe80062c6394f8f8d5804cafdf4b2ff1c2b5feefccbb11233dc843632d0a9060200160405180910390a150565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1633036102a257507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec36013560601c90565b503390565b6000602082840312156102b957600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146102dd57600080fd5b9392505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361033c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220d1a11ad15c84e61c924b1c122a8896f9e758ffcd5215de911814e347d77eb9e064736f6c63430008100033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1735,
        "contract": "contracts/CounterERC2771.sol:CounterERC2771",
        "label": "contextCounter",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}